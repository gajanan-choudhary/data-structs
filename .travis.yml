language: cpp
dist: xenial
notifications:
  email: false

# Define builds on mulitple OS/compiler combinations. 
# Feel free to add/remove entries from this list.
matrix:
  include:
    - os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
              #- lcov
            - g++-7
      env:
        - MATRIX_EVAL="CXX_COMPILER=g++-7; sudo update-alternatives --install /usr/bin/gcov gcov /usr/bin/gcov-7 90"
        - MATRIX_EVAL_COVERALLS="pip install --user cpp-coveralls;"

    - os: osx
      osx_image: xcode10.1
      #addons:
      #  homebrew:
      #    packages:
      #    - lcov
      #    update: true
      env:
        - MATRIX_EVAL="CXX_COMPILER=clang++"
        - MATRIX_EVAL_COVERALLS="brew update; brew install pyenv; eval "$(pyenv init -)"; pyenv install 2.7.6; pyenv global 2.7.6; pyenv rehash; pip install coveralls; pip install cpp-coveralls; pyenv rehash;"
 

before_install:
  - eval "${MATRIX_EVAL}"
  - eval "${MATRIX_EVAL_COVERALLS}"
  - PARENTDIR=$(pwd)
  - mkdir $PARENTDIR/build

install: 
  - cd $PARENTDIR/build
  - cmake $PARENTDIR -DCMAKE_BUILD_TYPE=Coverage -DBUILD_DEBUG_LEVEL=2 -DCMAKE_CXX_COMPILER=$CXX_COMPILER
  - make

script:
  - make coverage

after_success:
  - cd $PARENTDIR
  - coveralls -e build/  --gcov-options '\-lp'

    #after_success:
    #  - cd $PARENTDIR/build
    #  - lcov --list coverage_out.info.cleaned  # Show test report in travis log.
    #  # Install coverals gem for uploading coverage to coveralls.
    #  - gem install coveralls-lcov
    #  - coveralls-lcov coverage_out.info.cleaned  # uploads to coveralls
    #  - bash <(curl -s https://codecov.io/bash) -f coverage_out.info.cleaned || echo "Codecov did not collect coverage reports"
